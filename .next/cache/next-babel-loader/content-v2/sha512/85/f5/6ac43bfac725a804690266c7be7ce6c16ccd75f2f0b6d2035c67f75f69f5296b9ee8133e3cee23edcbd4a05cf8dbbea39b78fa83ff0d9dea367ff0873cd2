{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4Correto/src/pages/index.tsx\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../services/prismic';\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport styles from './home.module.scss';\nimport { useState } from 'react';\nimport { postFormatter } from '../formatters/prismicResponseFormatter';\nimport Header from '../components/Header';\nexport default function Home({\n  postsPagination,\n  preview\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsPagination.results);\n  const {\n    0: nextPage,\n    1: setNextPage\n  } = useState(postsPagination.next_page);\n\n  async function handleLoadPosts() {\n    await fetch(nextPage ? nextPage : '').then(response => response.json()).then(data => {\n      const formattedData = postFormatter(data);\n      setPosts([...posts, ...formattedData.results]);\n      setNextPage(formattedData.next_page);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | SpaceTravelingBlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: [posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/post/${post.uid}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.data.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.postStatus,\n              children: [/*#__PURE__*/_jsxDEV(\"time\", {\n                children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), '  ' + format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n                  locale: ptBR\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this), '  ' + post.data.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, post.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)), nextPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoadPosts,\n          children: \"Carregar mais posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.previewMode,\n        children: [/*#__PURE__*/_jsxDEV(\"script\", {\n          async: true,\n          defer: true,\n          src: \"https://static.cdn.prismic.io/prismic.js?new=true&repo=spacetravelingblg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), preview ? /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/api/exit-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Sair do modo Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"aside\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/api/preview\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Entrar no modo Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async ({\n  preview = false,\n  previewData\n}) => {\n  var _previewData$ref;\n\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.predicates.at('document.type', 'pos')], {\n    pageSize: 2,\n    ref: (_previewData$ref = previewData === null || previewData === void 0 ? void 0 : previewData.ref) !== null && _previewData$ref !== void 0 ? _previewData$ref : null\n  });\n  const postsPagination = postFormatter(postsResponse);\n  return {\n    props: {\n      postsPagination,\n      preview\n    }\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4Correto/src/pages/index.tsx"],"names":["Head","Link","format","ptBR","Prismic","getPrismicClient","FiCalendar","FiUser","styles","useState","postFormatter","Header","Home","postsPagination","preview","posts","setPosts","results","nextPage","setNextPage","next_page","handleLoadPosts","fetch","then","response","json","data","formattedData","container","map","post","uid","title","subtitle","postStatus","Date","first_publication_date","locale","author","previewMode","getStaticProps","previewData","prismic","postsResponse","query","predicates","at","pageSize","ref","props"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nimport { format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport Prismic from '@prismicio/client';\nimport { getPrismicClient } from '../services/prismic';\n\nimport { FiCalendar, FiUser } from 'react-icons/fi';\nimport styles from './home.module.scss';\nimport { useState } from 'react';\nimport { postFormatter } from '../formatters/prismicResponseFormatter';\nimport Header from '../components/Header';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n  preview: boolean;\n}\n\nexport default function Home({ postsPagination, preview }: HomeProps) {\n  const [posts, setPosts] = useState(postsPagination.results);\n  const [nextPage, setNextPage] = useState(postsPagination.next_page);\n\n  async function handleLoadPosts() {\n    await fetch(nextPage ? nextPage : '')\n      .then(response => response.json())\n      .then(data => {\n        const formattedData = postFormatter(data);\n        setPosts([...posts, ...formattedData.results]);\n        setNextPage(formattedData.next_page);\n      });\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Home | SpaceTravelingBlog</title>\n      </Head>\n\n      <Header />\n\n      <main className={styles.container}>\n        <div className={styles.posts}>\n          {posts.map(post => (\n            <Link href={`/post/${post.uid}`} key={post.uid}>\n              <a>\n                <h1>{post.data.title}</h1>\n                <p>{post.data.subtitle}</p>\n                <div className={styles.postStatus}>\n                  <time>\n                    <FiCalendar />\n                    {'  ' +\n                      format(\n                        new Date(post.first_publication_date),\n                        'dd MMM yyyy',\n                        {\n                          locale: ptBR,\n                        }\n                      )}\n                  </time>\n                  <p>\n                    <FiUser />\n                    {'  ' + post.data.author}\n                  </p>\n                </div>\n              </a>\n            </Link>\n          ))}\n          {nextPage ? (\n            <button onClick={handleLoadPosts}>Carregar mais posts</button>\n          ) : (\n            ''\n          )}\n        </div>\n        <div className={styles.previewMode}>\n          <script\n            async\n            defer\n            src=\"https://static.cdn.prismic.io/prismic.js?new=true&repo=spacetravelingblg\"\n          ></script>\n          {preview ? (\n            <aside>\n              <Link href=\"/api/exit-preview\">\n                <a>Sair do modo Preview</a>\n              </Link>\n            </aside>\n          ) : (\n            <aside>\n              <Link href=\"/api/preview\">\n                <a>Entrar no modo Preview</a>\n              </Link>\n            </aside>\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport const getStaticProps: GetStaticProps<HomeProps> = async ({\n  preview = false,\n  previewData,\n}) => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query(\n    [Prismic.predicates.at('document.type', 'pos')],\n    {\n      pageSize: 2,\n      ref: previewData?.ref ?? null,\n    }\n  );\n\n  const postsPagination = postFormatter(postsResponse);\n\n  return {\n    props: { postsPagination, preview },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}