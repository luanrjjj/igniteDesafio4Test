{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/IgniteDesafio4Correto/src/pages/index.tsx\";\nimport Prismic from '@prismicio/client';\nimport { AiOutlineCalendar, AiOutlineUser } from 'react-icons/ai';\nimport Head from \"next/head\";\nimport { getPrismicClient } from '../services/prismic';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\nimport Header from '../components/Header';\nexport default function Home({\n  postPagination\n}) {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([postPagination.posts[count]]);\n  console.log(100, postPagination.posts.length);\n\n  function loadMore() {\n    let countNew = count + 1;\n    setCount(countNew);\n\n    if (countNew < postPagination.posts.length) {\n      return setPosts([...posts, postPagination.posts[countNew]]);\n    } else if (countNew > postPagination.posts.length) {\n      setPosts([postPagination.posts]);\n    } else return;\n  }\n\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" Posts| Ignews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.images,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/Vector.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.secondimage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/spacetraveling.png\",\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this), posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: `/post/${post.slug}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: post.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.data.subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.DateAndAuthor,\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineCalendar, {\n                  className: styles.calendaricon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n                  children: post.first_publication_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(AiOutlineUser, {\n                  className: styles.usericon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.data.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 7\n              }, this)]\n            }, post.slug, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)), count < postPagination.posts.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.LoadMore,\n          onClick: loadMore,\n          children: \"Carregar mais posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 1\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const postsResponse = await prismic.query([Prismic.Predicates.at('document.type', 'post')], {\n    fetch: ['post.title', 'post.subtitle', 'post.author', 'post.content'],\n    pageSize: 99999\n  });\n  const posts = postsResponse.results.map(post => {\n    return {\n      slug: post.uid,\n      first_publication_date: new Date(post.first_publication_date).toLocaleDateString('pt-br', {\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author\n      }\n    };\n  });\n  console.log(100, JSON.stringify(postsResponse, null, 2));\n  console.log(200, posts);\n  const postPagination = {\n    posts,\n    next_page: postsResponse.next_page,\n    total_pages: postsResponse.total_pages\n  };\n  return {\n    props: {\n      postPagination\n    },\n    redirect: 60 * 30\n  };\n};","map":{"version":3,"sources":["/home/luan/Documentos/IgniteDesafio4Correto/src/pages/index.tsx"],"names":["Prismic","AiOutlineCalendar","AiOutlineUser","Head","getPrismicClient","useState","Link","styles","useRouter","Header","Home","postPagination","count","setCount","posts","setPosts","console","log","length","loadMore","countNew","router","container","images","secondimage","map","post","slug","data","title","subtitle","DateAndAuthor","calendaricon","first_publication_date","usericon","author","LoadMore","getStaticProps","prismic","postsResponse","query","Predicates","at","fetch","pageSize","results","uid","Date","toLocaleDateString","day","month","year","JSON","stringify","next_page","total_pages","props","redirect"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport { apiResolver } from 'next/dist/next-server/server/api-utils';\nimport Prismic from '@prismicio/client'\nimport { AiOutlineCalendar,AiOutlineUser} from 'react-icons/ai'\nimport Head from \"next/head\"\nimport { getPrismicClient } from '../services/prismic';\nimport {useState,useEffect} from 'react';\nimport  Link from 'next/link'\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport { useRouter } from 'next/router';\n\nimport Header from '../components/Header'\n\ninterface Post {\n \n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    subtitle: string;\n    author: string;\n  };\n}\n\ninterface PostsProps {\n  posts: Post []\n}\n\ninterface PostPagination {\n  next_page: string;\n  total_pages:string;\n  results: Post[];\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n}\n\nexport default function Home({postPagination}) {\n  const [count,setCount] = useState(0)\n  const [posts,setPosts] = useState([postPagination.posts[count]])\n  \nconsole.log(100,postPagination.posts.length)\n\n\nfunction loadMore () {\n  let countNew = count +1 \n  setCount(countNew)\n \n if (countNew < postPagination.posts.length) {\n  \n   return (\n   setPosts([...posts,postPagination.posts[countNew]]))\n\n } else if (countNew > postPagination.posts.length ) {setPosts([postPagination.posts])\n } else return\n\n}\n\n\n  const router = useRouter()\nreturn (\n\n  <>\n  <Head>\n    <title> Posts| Ignews</title>\n  </Head>\n\n  <Header/>\n\n  <main className = {styles.container}>\n   \n    <div className = {styles.posts}> \n    <div className={styles.images}>\n      <img src =\"/images/Vector.png\" alt = \"logo\"/>\n      <div className= {styles.secondimage}>\n      <img  src =\"/images/spacetraveling.png\" alt = \"logo\"/> \n      </div>  \n    </div>\n    {posts.map(post => (\n      <>\n      <Link href = {`/post/${post.slug}`}>\n      <a key = {post.slug}>\n      <strong>{post.data.title}</strong>\n      <p>{post.data.subtitle}</p>\n      <div className= {styles.DateAndAuthor}> \n      <AiOutlineCalendar className = { styles.calendaricon }></AiOutlineCalendar>\n      <time>{post.first_publication_date}</time>\n      <AiOutlineUser className= {styles.usericon}></AiOutlineUser>\n      <p>{post.data.author}</p>\n      </div>\n\n      </a>\n      </Link>\n</>\n      ))\n    }\n\n    {count<postPagination.posts.length-1 ? (\n<button className = {styles.LoadMore} onClick = {loadMore}>\n  Carregar mais posts\n</button>\n    )\n:null\n}\n  </div>\n  </main>\n  </>\n    \n)\n}\n\nexport const getStaticProps = async () => {\n\n\n  const prismic = getPrismicClient();\n  \n  \n  \n  const postsResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type','post')],\n    {\n      fetch:['post.title','post.subtitle','post.author','post.content'],\n      pageSize:99999\n    } \n  ); \n\n  \n  const posts = postsResponse.results.map(post => {\n    return {\n      slug:post.uid,\n      first_publication_date:new Date(post.first_publication_date).toLocaleDateString('pt-br',{\n        day:'2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n  data: {\n    title: post.data.title,\n    subtitle: post.data.subtitle,\n    author: post.data.author,\n    }\n  }\n  })\n  \n  console.log(100,JSON.stringify(postsResponse,null,2))\n  console.log(200,posts)\n\n  const postPagination = {\n    posts,\n    next_page:postsResponse.next_page,\n    total_pages:postsResponse.total_pages\n  }\n\n  return {props:{\n    postPagination,\n    \n  },\nredirect:60*30}\n\n}\n"]},"metadata":{},"sourceType":"module"}